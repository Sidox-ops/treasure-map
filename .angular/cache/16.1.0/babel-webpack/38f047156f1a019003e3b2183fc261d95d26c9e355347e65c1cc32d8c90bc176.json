{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/map.service\";\nimport * as i2 from \"../adventurer/service/adventurer.service\";\nimport * as i3 from \"@angular/common\";\nfunction MapComponent_div_2_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \".\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapComponent_div_2_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"M\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapComponent_div_2_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"T(\", cell_r4.treasures, \")\");\n  }\n}\nfunction MapComponent_div_2_div_1_div_4_div_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2191\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapComponent_div_2_div_1_div_4_div_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2193\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapComponent_div_2_div_1_div_4_div_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2192\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapComponent_div_2_div_1_div_4_div_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2190\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapComponent_div_2_div_1_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, MapComponent_div_2_div_1_div_4_div_1_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(3, MapComponent_div_2_div_1_div_4_div_1_span_3_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(4, MapComponent_div_2_div_1_div_4_div_1_span_4_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(5, MapComponent_div_2_div_1_div_4_div_1_span_5_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const adventurer_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", adventurer_r11.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", adventurer_r11.orientation === \"N\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", adventurer_r11.orientation === \"S\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", adventurer_r11.orientation === \"E\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", adventurer_r11.orientation === \"W\");\n  }\n}\nfunction MapComponent_div_2_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, MapComponent_div_2_div_1_div_4_div_1_Template, 6, 5, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const adventurer_r11 = ctx.$implicit;\n    const x_r5 = i0.ɵɵnextContext().index;\n    const y_r2 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", adventurer_r11.x === x_r5 && adventurer_r11.y === y_r2);\n  }\n}\nfunction MapComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, MapComponent_div_2_div_1_div_1_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtemplate(2, MapComponent_div_2_div_1_div_2_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtemplate(3, MapComponent_div_2_div_1_div_3_Template, 2, 1, \"div\", 6);\n    i0.ɵɵtemplate(4, MapComponent_div_2_div_1_div_4_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r4 = ctx.$implicit;\n    const x_r5 = ctx.index;\n    const y_r2 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.getCellStyle(cell_r4, x_r5, y_r2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", cell_r4 === \"P\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", cell_r4 === \"M\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (cell_r4 == null ? null : cell_r4.type) === \"T\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.adventurers);\n  }\n}\nfunction MapComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, MapComponent_div_2_div_1_Template, 5, 5, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\nexport class MapComponent {\n  constructor(mapService, adventureService) {\n    this.mapService = mapService;\n    this.adventureService = adventureService;\n  }\n  ngOnInit() {\n    this.mapService.map$.subscribe(map => this.map = map);\n    this.adventureService.adventurers$.subscribe(adventurers => {\n      this.adventurers = adventurers;\n    });\n    this.simulateAdventure();\n  }\n  getCellStyle(cell, x, y) {\n    if (this.adventurers.some(a => a.x === x && a.y === y)) {\n      return 'adventurer';\n    } else if (cell === 'P') {\n      return 'plain';\n    } else if (cell === 'M') {\n      return 'mountain';\n    } else if (cell.type === 'T') {\n      return 'treasure';\n    }\n    return '';\n  }\n  simulateAdventure() {\n    for (const adventurer of this.adventurers) {\n      for (const movement of adventurer.movements) {\n        if (movement === 'A') {\n          // Compute next position based on orientation\n          let nextPos = this.getNextPosition(adventurer.x, adventurer.y, adventurer.orientation);\n          // If it's a valid move (not a mountain or outside the map), move the adventurer\n          if (this.isValidMove(nextPos.x, nextPos.y)) {\n            adventurer.x = nextPos.x;\n            adventurer.y = nextPos.y;\n            // If it's a treasure, increment the adventurer's treasure count\n            if (this.map[adventurer.y][adventurer.x] && this.map[adventurer.y][adventurer.x].type === 'T') {\n              adventurer.treasures++;\n              this.map[adventurer.y][adventurer.x].treasures--;\n              if (this.map[adventurer.y][adventurer.x].treasures === 0) {\n                // If no more treasures, revert to normal ground\n                this.map[adventurer.y][adventurer.x] = 'P';\n              }\n            }\n          } else {\n            // If not a valid move, do nothing\n            'Invalid move';\n          }\n        } else {\n          // Update orientation based on whether adventurer is turning right ('D') or left ('G')\n          adventurer.orientation = this.updateOrientation(adventurer.orientation, movement);\n        }\n      }\n    }\n    return 'Adventure completed :' + this.adventurers.map(a => a.name + ' has ' + a.treasures + ' treasures').join(', ');\n  }\n  getNextPosition(x, y, orientation) {\n    switch (orientation) {\n      case 'N':\n        return {\n          x: x,\n          y: y - 1\n        };\n      case 'S':\n        return {\n          x: x,\n          y: y + 1\n        };\n      case 'E':\n        return {\n          x: x + 1,\n          y: y\n        };\n      case 'W':\n        return {\n          x: x - 1,\n          y: y\n        };\n      default:\n        return {\n          x: x,\n          y: y\n        };\n    }\n  }\n  isValidMove(x, y) {\n    return x >= 0 && y >= 0 && y < this.map.length && x < this.map[0].length && (this.map[y][x] === 'P' || this.map[y][x].type && this.map[y][x].type === 'T');\n  }\n  updateOrientation(currentOrientation, turn) {\n    const orientations = ['N', 'E', 'S', 'W'];\n    let currentIndex = orientations.indexOf(currentOrientation);\n    if (turn === 'D') {\n      currentIndex = (currentIndex + 1) % orientations.length;\n    } else if (turn === 'G') {\n      currentIndex = (currentIndex - 1 + orientations.length) % orientations.length;\n    }\n    return orientations[currentIndex];\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.MapService), i0.ɵɵdirectiveInject(i2.AdventureService));\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"margin\", \"12px\"], [\"role\", \"grid\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"row\"], [\"role\", \"cell\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"cell\", 3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, MapComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.map);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.simulateAdventure(), \"\\n\");\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n  styles: [\"\\n\\ndiv[role=\\\"grid\\\"][_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: start;\\n    gap: 5px;\\n}\\n\\n\\n\\ndiv[role=\\\"row\\\"][_ngcontent-%COMP%] {\\n    display: flex;\\n    gap: 5px;\\n}\\n\\n\\n\\ndiv[role=\\\"cell\\\"][_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    width: 50px;\\n    height: 50px;\\n    border: 1px solid black;\\n}\\n\\n\\n\\ndiv[role=\\\"cell\\\"].plain[_ngcontent-%COMP%] {\\n    background-color: #a3d9a3;\\n}\\n\\ndiv[role=\\\"cell\\\"].mountain[_ngcontent-%COMP%] {\\n    background-color: #757575;\\n}\\n\\ndiv[role=\\\"cell\\\"].treasure[_ngcontent-%COMP%] {\\n    background-color: #ffd700;\\n}\\n\\ndiv[role=\\\"cell\\\"].adventurer[_ngcontent-%COMP%] {\\n    background-color: #0000ff;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlDQUFpQztBQUNqQztJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLFFBQVE7QUFDWjs7QUFFQSx1Q0FBdUM7QUFDdkM7SUFDSSxhQUFhO0lBQ2IsUUFBUTtBQUNaOztBQUVBLHlDQUF5QztBQUN6QztJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxZQUFZO0lBQ1osdUJBQXVCO0FBQzNCOztBQUVBLG1EQUFtRDtBQUNuRDtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFN0eWxlcyBkZSBiYXNlIHBvdXIgbGEgY2FydGUgKi9cbmRpdltyb2xlPVwiZ3JpZFwiXSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgICBnYXA6IDVweDtcbn1cblxuLyogU3R5bGVzIHBvdXIgbGVzIGxpZ25lcyBkZSBsYSBjYXJ0ZSAqL1xuZGl2W3JvbGU9XCJyb3dcIl0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA1cHg7XG59XG5cbi8qIFN0eWxlcyBwb3VyIGxlcyBjZWxsdWxlcyBkZSBsYSBjYXJ0ZSAqL1xuZGl2W3JvbGU9XCJjZWxsXCJdIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xufVxuXG4vKiBTdHlsZXMgc3DDg8KpY2lmaXF1ZXMgcG91ciBjaGFxdWUgdHlwZSBkZSBjZWxsdWxlICovXG5kaXZbcm9sZT1cImNlbGxcIl0ucGxhaW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNhM2Q5YTM7XG59XG5cbmRpdltyb2xlPVwiY2VsbFwiXS5tb3VudGFpbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc1NzU3NTtcbn1cblxuZGl2W3JvbGU9XCJjZWxsXCJdLnRyZWFzdXJlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkNzAwO1xufVxuXG5kaXZbcm9sZT1cImNlbGxcIl0uYWR2ZW50dXJlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDBmZjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","cell_r4","treasures","ɵɵtemplate","MapComponent_div_2_div_1_div_4_div_1_span_2_Template","MapComponent_div_2_div_1_div_4_div_1_span_3_Template","MapComponent_div_2_div_1_div_4_div_1_span_4_Template","MapComponent_div_2_div_1_div_4_div_1_span_5_Template","adventurer_r11","name","ɵɵproperty","orientation","MapComponent_div_2_div_1_div_4_div_1_Template","x","x_r5","y","y_r2","MapComponent_div_2_div_1_div_1_Template","MapComponent_div_2_div_1_div_2_Template","MapComponent_div_2_div_1_div_3_Template","MapComponent_div_2_div_1_div_4_Template","ctx_r3","getCellStyle","type","adventurers","MapComponent_div_2_div_1_Template","row_r1","MapComponent","constructor","mapService","adventureService","ngOnInit","map$","subscribe","map","adventurers$","simulateAdventure","cell","some","a","adventurer","movement","movements","nextPos","getNextPosition","isValidMove","updateOrientation","join","length","currentOrientation","turn","orientations","currentIndex","indexOf","ɵɵdirectiveInject","i1","MapService","i2","AdventureService","selectors","decls","vars","consts","template","MapComponent_Template","rf","ctx","MapComponent_div_2_Template"],"sources":["/Users/sidox/dev/treasure-map/src/app/map/map.component.ts","/Users/sidox/dev/treasure-map/src/app/map/map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MapService } from './service/map.service';\nimport { AdventureService } from '../adventurer/service/adventurer.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  map!: any[][];\n  adventurers!: any[];\n  result!: string;\n\n  constructor(\n    private mapService: MapService,\n    private adventureService: AdventureService\n  ) { }\n\n  ngOnInit(): void {\n    this.mapService.map$.subscribe(map => this.map = map);\n    this.adventureService.adventurers$.subscribe(adventurers => {\n      this.adventurers = adventurers;\n    });\n    \n    this.simulateAdventure();\n  }\n\n  getCellStyle(cell: any, x: number, y: number) {\n    if (this.adventurers.some(a => a.x === x && a.y === y)) {\n      return 'adventurer';\n    } else if (cell === 'P') {\n      return 'plain';\n    } else if (cell === 'M') {\n      return 'mountain';\n    } else if (cell.type === 'T') {\n      return 'treasure';\n    }\n\n    return '';\n  }\n\n  simulateAdventure() {\n    for (const adventurer of this.adventurers) {\n      for (const movement of adventurer.movements) {\n        if (movement === 'A') {\n          // Compute next position based on orientation\n          let nextPos = this.getNextPosition(adventurer.x, adventurer.y, adventurer.orientation);\n          // If it's a valid move (not a mountain or outside the map), move the adventurer\n          if (this.isValidMove(nextPos.x, nextPos.y)) {\n            adventurer.x = nextPos.x;\n            adventurer.y = nextPos.y;\n            // If it's a treasure, increment the adventurer's treasure count\n            if (this.map[adventurer.y][adventurer.x] && this.map[adventurer.y][adventurer.x].type === 'T') {\n              adventurer.treasures++;\n              this.map[adventurer.y][adventurer.x].treasures--;\n              if (this.map[adventurer.y][adventurer.x].treasures === 0) {\n                // If no more treasures, revert to normal ground\n                this.map[adventurer.y][adventurer.x] = 'P';\n              }\n            }\n          } else {\n            // If not a valid move, do nothing\n            'Invalid move';\n          }\n        } else {\n          // Update orientation based on whether adventurer is turning right ('D') or left ('G')\n          adventurer.orientation = this.updateOrientation(adventurer.orientation, movement);\n        }\n      }\n    }\n    return 'Adventure completed :' + this.adventurers.map(a => a.name + ' has ' + a.treasures + ' treasures').join(', ');\n  }\n\n  getNextPosition(x: number, y: number, orientation: string) {\n    switch (orientation) {\n      case 'N':\n        return { x: x, y: y - 1 };\n      case 'S':\n        return { x: x, y: y + 1 };\n      case 'E':\n        return { x: x + 1, y: y };\n      case 'W':\n        return { x: x - 1, y: y };\n      default:\n        return { x: x, y: y };\n    }\n  }\n\n  isValidMove(x: number, y: number) {\n    return (\n      x >= 0 &&\n      y >= 0 &&\n      y < this.map.length &&\n      x < this.map[0].length &&\n      (this.map[y][x] === 'P' || (this.map[y][x].type && this.map[y][x].type === 'T'))\n    );\n  }\n\n  updateOrientation(currentOrientation: string, turn: string) {\n    const orientations = ['N', 'E', 'S', 'W'];\n    let currentIndex = orientations.indexOf(currentOrientation);\n    if (turn === 'D') {\n      currentIndex = (currentIndex + 1) % orientations.length;\n    } else if (turn === 'G') {\n      currentIndex = (currentIndex - 1 + orientations.length) % orientations.length;\n    }\n    return orientations[currentIndex];\n  }\n\n\n}\n","<div style=\"display: flex; justify-content: center; align-items: center; margin: 12px;\">\n    <div role=\"grid\">\n        <div *ngFor=\"let row of map; let y = index\" role=\"row\">\n            <div\n                *ngFor=\"let cell of row; let x = index\"\n                [ngClass]=\"getCellStyle(cell, x, y)\"\n                role=\"cell\"\n            >\n                <div *ngIf=\"cell === 'P'\">.</div>\n                <div *ngIf=\"cell === 'M'\">M</div>\n                <div *ngIf=\"cell?.type === 'T'\">T({{ cell.treasures }})</div>\n                <div *ngFor=\"let adventurer of adventurers\">\n                    <div *ngIf=\"adventurer.x === x && adventurer.y === y\">\n                        {{ adventurer.name }}\n                        <span *ngIf=\"adventurer.orientation === 'N'\"\n                            >&uarr;</span\n                        >\n                        <span *ngIf=\"adventurer.orientation === 'S'\"\n                            >&darr;</span\n                        >\n                        <span *ngIf=\"adventurer.orientation === 'E'\"\n                            >&rarr;</span\n                        >\n                        <span *ngIf=\"adventurer.orientation === 'W'\"\n                            >&larr;</span\n                        >\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div>\n    {{ this.simulateAdventure() }}\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}